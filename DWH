CREATE DATABASE Bronze_Layer
GO
USE Bronze_Layer

CREATE TABLE Orders(
	RowID VARCHAR(255),
	OrderID VARCHAR(255),
	OrderDate VARCHAR(255),
	ShipDate VARCHAR(255),
	ShipMode VARCHAR(255),
	CustomerID VARCHAR(255),
	CustomerName VARCHAR(255),
	Segment VARCHAR(255),
	Country VARCHAR(255),
	City VARCHAR(255),
	State VARCHAR(255),
	PostalCode VARCHAR(255),
	Region VARCHAR(255),
	ProductID VARCHAR(255),
	Category VARCHAR(255),
	Sub_Category VARCHAR(255),
	ProductName VARCHAR(255),
	Sales VARCHAR(255),
	Quantity VARCHAR(255),
	Discount VARCHAR(255),
	Profit VARCHAR(255) );


CREATE TABLE Returns(
Returned VARCHAR(255),
OrderID VARCHAR(255));

CREATE TABLE People(
Person VARCHAR(255),
Region VARCHAR(255));

CREATE TABLE CaricamentiLog(
NomeFile VARCHAR(255),
DataCaricamento DATETIME,
NumeroRigheCaricate INT,
ErroreCaricamento VARCHAR(255))

GO
CREATE OR ALTER PROCEDURE CaricaSampleSuperstore AS
SET XACT_ABORT ON
SET NOCOUNT ON
BEGIN TRY
	TRUNCATE TABLE Orders

	TRUNCATE TABLE Returns

	TRUNCATE TABLE People

	BULK INSERT Orders
	FROM 'C:\Users\ianto\Desktop\SQL Data Model\Sample - Superstore_1.csv'
	WITH (
		FIELDTERMINATOR = ';',
		ROWTERMINATOR = '\n',
		FIRSTROW = 2,
		FORMAT = 'CSV',
		maxerrors = 0
	);

	BULK INSERT Returns
	FROM 'C:\Users\ianto\Desktop\SQL Data Model\Sample - Superstore_2.csv'
	WITH (
		FIELDTERMINATOR = ';',
		ROWTERMINATOR = '\n',
		FIRSTROW = 2,
		FORMAT = 'CSV',
		maxerrors = 0
	);


	BULK INSERT People
	FROM 'C:\Users\ianto\Desktop\SQL Data Model\Sample - Superstore_3.csv'
	WITH (
		FIELDTERMINATOR = ';',
		ROWTERMINATOR = '\n',
		FIRSTROW = 2,
		FORMAT = 'CSV',
		maxerrors = 0
	);

	INSERT INTO CaricamentiLog (NomeFile,DataCaricamento,NumeroRigheCaricate,ErroreCaricamento)
	SELECT 'Sample - Superstore.xls',
		GETDATE(),
		(SELECT COUNT(*) FROM Orders)+(SELECT COUNT(*) FROM Returns)+(SELECT COUNT(*) FROM People),
		NULL

END TRY
BEGIN CATCH

	INSERT INTO CaricamentiLog (NomeFile,DataCaricamento,NumeroRigheCaricate,ErroreCaricamento)
	SELECT 'Sample - Superstore.xls',
		GETDATE(),
		NULL,
		ERROR_MESSAGE();

	THROW
END CATCH

GO

CREATE DATABASE Silver_Layer
GO
USE Silver_Layer

CREATE TABLE Orders(
	RowID INT NOT NULL PRIMARY KEY,
	OrderID VARCHAR(255) NOT NULL,
	OrderDate DATE NOT NULL,
	ShipDate DATE NULL,
	ShipMode VARCHAR(255) NULL,
	CustomerID VARCHAR(255) NOT NULL,
	CustomerName VARCHAR(255) NULL,
	Segment VARCHAR(255) NULL,
	Country VARCHAR(255) NULL,
	City VARCHAR(255) NULL,
	State VARCHAR(255) NULL,
	PostalCode VARCHAR(255) NULL,
	Region VARCHAR(255) NULL,
	ProductID VARCHAR(255) NOT NULL,
	Category VARCHAR(255) NULL,
	Sub_Category VARCHAR(255) NULL,
	ProductName VARCHAR(255) NULL,
	Sales DECIMAL(18,4) NOT NULL,
	Quantity DECIMAL(18,4) NOT NULL,
	Discount DECIMAL(18,4) NOT NULL,
	Profit DECIMAL(18,4) NOT NULL);

CREATE UNIQUE INDEX IX_GRANULARITA 
ON Orders(OrderID,ProductID)

CREATE TABLE People(
Person VARCHAR(255) PRIMARY KEY,
Region VARCHAR(255) NOT NULL);

CREATE TABLE CaricamentiLog(
NomeProcedura VARCHAR(255),
DataCaricamento DATETIME,
NumeroRigheCaricate INT,
ErroreCaricamento VARCHAR(255));

GO
USE Silver_Layer
GO
CREATE OR ALTER PROCEDURE CaricaSampleSuperstoreSilver AS
SET XACT_ABORT ON
SET NOCOUNT ON
BEGIN
BEGIN TRY

	TRUNCATE TABLE People;

	INSERT INTO People(Person,Region)
	SELECT Person, Region
	FROM   Bronze_Layer.dbo.People;

	TRUNCATE TABLE Silver_Layer.dbo.Orders

	INSERT INTO Silver_Layer.dbo.Orders(RowID,OrderID,OrderDate,ShipDate,ShipMode
	,CustomerID,CustomerName,Segment,Country,City,State,PostalCode,Region,ProductID
	,Category,Sub_Category,ProductName,Sales,Quantity,Discount,Profit)
	SELECT MIN(CONVERT(INT,RowID)) AS RowID
	,O.OrderID
	,CONVERT(DATE,OrderDate,103) AS OrderDate
	,CONVERT(DATE,ShipDate,103) AS ShipDate
	,ShipMode
	,CustomerID
	,CustomerName
	,Segment
	,CASE WHEN Country = 'USA'
	       THEN 'United States' 
		   ELSE Country 
     END   AS    Country 
	,City
	,State
	,PostalCode
	,Region
	,ProductID
	,Category
	,Sub_Category
	,ProductName
	,SUM(convert(decimal(18,4),REPLACE(Sales,',','.'))) AS Sales
	,SUM(convert(decimal(18,4),REPLACE(Quantity,',','.'))) as Quantity
	,SUM(convert(decimal(18,4),REPLACE(Discount,',','.'))) as Discount
	,SUM(convert(decimal(18,4),REPLACE(Profit,',','.'))) as Profit
	FROM Bronze_Layer.dbo.Orders AS O
	left JOIN (select distinct orderID from Bronze_Layer.dbo.Returns) as r
		on o.OrderID = r.orderID
	WHERE R.orderID IS NULL
	GROUP BY 
	O.OrderID
	,CONVERT(DATE,OrderDate,103)
	,CONVERT(DATE,ShipDate,103) 
	,ShipMode
	,CustomerID
	,CustomerName
	,Segment
	,CASE WHEN Country = 'USA'
	       THEN 'United States' 
		   ELSE Country 
     END   
	,City
	,State
	,PostalCode
	,Region
	,ProductID
	,Category
	,Sub_Category
	,ProductName

	INSERT INTO CaricamentiLog (NomeProcedura,DataCaricamento,NumeroRigheCaricate,ErroreCaricamento)
	SELECT 'CaricaSampleSuperstoreSilver',
		GETDATE(),
		(SELECT COUNT(*) FROM People)+(SELECT COUNT(*) FROM Orders),
		NULL
END TRY
BEGIN CATCH
	INSERT INTO CaricamentiLog (NomeProcedura,DataCaricamento,NumeroRigheCaricate,ErroreCaricamento)
	SELECT 'CaricaSampleSuperstoreSilver',
		GETDATE(),
		NULL,
		ERROR_MESSAGE();

	THROW
END CATCH
END

USE Bronze_Layer
EXEC CaricaSampleSuperstore

USE SILVER_Layer
exec CaricaSampleSuperstoreSilver

go
CREATE DATABASE Golden_Layer
go
use Golden_Layer

CREATE TABLE DimTempo(
	IdTempo INT PRIMARY KEY,
	TempoDate DATE NOT NULL,
	DayDate INT NOT NULL,
	MonthDate INT NOT NULL,
	YearDate INT NOT NULL)

CREATE TABLE DimCustomer(
	CustomerID INT PRIMARY KEY IDENTITY(1,1),
	CustomerIDOriginal VARCHAR(255) NOT NULL,
	CustomerName VARCHAR(255) NOT NULL,	
	Segment VARCHAR(255) NULL)
	
CREATE UNIQUE INDEX IX_Granularità ON DimCustomer(CustomerIDOriginal)

create TABLE DimCity(
	CityID INT PRIMARY KEY identity(1,1),
	Country VARCHAR(255) NULL,	
	City VARCHAR(255) NULL,
	State VARCHAR(255) NULL,	
	PostalCode VARCHAR(255) NULL, 
	Region VARCHAR(255) NULL)

CREATE UNIQUE INDEX IX_GRANULARITY ON DimCity(CityID)

CREATE TABLE DimProduct(
	ProductID INT PRIMARY KEY IDENTITY(1,1),
	ProductIDOriginal VARCHAR(255) NOT NULL,
	Category VARCHAR(255) NULL,
	SubCategory VARCHAR(255) NULL,
	ProductName VARCHAR(255) NULL)

CREATE UNIQUE INDEX IX_Granularità ON DimProduct(ProductIDOriginal)

CREATE TABLE FactSells(
	ID INT PRIMARY KEY IDENTITY(1,1),
	OrderID VARCHAR(255) NOT NULL,
	CustomerID int not null,
	ProductID INT NOT NULL,
	CityID INT NOT NULL,
	OrderDate INT NOT NULL,
	ShipDate INT NOT NULL,
	ShipMode VARCHAR(255) NOT NULL,
	Sales DECIMAL(18,4) NOT NULL,
	Quantity DECIMAL(18,4) NOT NULL,	
	Discount DECIMAL(18,4) NOT NULL,
	Profit DECIMAL(18,4) NOT NULL,
	FOREIGN KEY(CustomerID) REFERENCES DimCustomer(CustomerID),
	FOREIGN KEY(ProductID) REFERENCES DimProduct(ProductID),
	FOREIGN KEY(OrderDate) REFERENCES DimTempo(IdTempo),
	FOREIGN KEY(ShipDate) REFERENCES DimTempo(IdTempo),
	FOREIGN KEY(CityID) REFERENCES DimCity(CityID)
	)

CREATE UNIQUE INDEX IX_Granularità ON FactSells(OrderID,ProductID)


DECLARE @StartDate DATE = '2010-01-01';
DECLARE @EndDate DATE = '2019-12-31';
DECLARE @CurrentDate DATE = @StartDate;

WHILE @CurrentDate <= @EndDate
BEGIN
    INSERT INTO DimTempo (IdTempo, TempoDate, DayDate, MonthDate, YearDate)
    VALUES ( CAST(YEAR(@CurrentDate) * 10000 + MONTH(@CurrentDate) * 100 + DAY(@CurrentDate) AS INT), @CurrentDate, DAY(@CurrentDate), MONTH(@CurrentDate), YEAR(@CurrentDate));
    
    SET @CurrentDate = DATEADD(DAY, 1, @CurrentDate);
END;


INSERT INTO Golden_Layer.dbo.DimProduct(ProductIDOriginal,
	Category,SubCategory ,ProductName)
SELECT  ProductID,Category,Sub_Category,MIN(ProductName)
FROM Silver_Layer.DBO.Orders
GROUP BY ProductID,Category,Sub_Category


INSERT INTO Golden_Layer.dbo.DimCustomer(
CustomerIDOriginal,CustomerName,Segment)
SELECT DISTINCT CustomerID,CustomerName,Segment
FROM Silver_Layer.DBO.Orders

INSERT INTO Golden_Layer.dbo.DimCity(
	Country,	
	City,
	State,	
	PostalCode, 
	Region)
SELECT DISTINCT Country,City,State,PostalCode,Region
FROM Silver_Layer.DBO.Orders


INSERT INTO FactSells(
OrderID,CustomerID,ProductID,CityID,OrderDate,ShipDate,
ShipMode,Sales,Quantity,Discount,Profit)
SELECT o.OrderID,C.CustomerID,P.ProductID,Cy.CityID, T1.IdTempo as OrderDate,
t2.IdTempo as ShipDate, o.ShipMode,o.Sales,o.Quantity,o.Discount,o.Profit
FROM Silver_Layer.DBO.Orders AS O
LEFT JOIN DimCustomer AS C
	ON O.CustomerID = C.CustomerIDOriginal
LEFT JOIN DimProduct AS P
	ON O.ProductID = P.ProductIDOriginal
LEFT JOIN DimCity AS Cy
	ON O.City = Cy.City
LEFT JOIN DimTempo AS t1
	ON O.OrderDate = t1.TempoDate
LEFT JOIN DimTempo AS t2
	ON O.ShipDate = t2.TempoDate


SELECT *
FROM FactSells  

SELECT * 
FROM DimCustomer

SELECT * 
FROM DimProduct

SELECT *
FROM DimCity

SELECT * 
FROM DimTEMPO 






